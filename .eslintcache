[{"/home/mahdi/to-do-react/src/index.js":"1","/home/mahdi/to-do-react/src/App.js":"2","/home/mahdi/to-do-react/src/reportWebVitals.js":"3","/home/mahdi/to-do-react/src/store.js":"4","/home/mahdi/to-do-react/src/components/NavBar.js":"5","/home/mahdi/to-do-react/src/reducers/root.js":"6","/home/mahdi/to-do-react/src/reducers/user.js":"7","/home/mahdi/to-do-react/src/components/Login.js":"8","/home/mahdi/to-do-react/src/components/Input.js":"9","/home/mahdi/to-do-react/src/components/Buttoon.js":"10","/home/mahdi/to-do-react/src/components/Tasks.js":"11","/home/mahdi/to-do-react/src/reducers/tasks.js":"12","/home/mahdi/to-do-react/src/actions/task.js":"13","/home/mahdi/to-do-react/src/components/Badge.js":"14","/home/mahdi/to-do-react/src/components/EditTask.js":"15","/home/mahdi/to-do-react/src/actions/auth.js":"16","/home/mahdi/to-do-react/src/Hoc/withAuth.js":"17"},{"size":570,"mtime":1610624597207,"results":"18","hashOfConfig":"19"},{"size":843,"mtime":1610650393369,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1610484448187,"results":"21","hashOfConfig":"19"},{"size":366,"mtime":1610570269981,"results":"22","hashOfConfig":"19"},{"size":1377,"mtime":1610922141374,"results":"23","hashOfConfig":"19"},{"size":180,"mtime":1610623227208,"results":"24","hashOfConfig":"19"},{"size":418,"mtime":1610649822424,"results":"25","hashOfConfig":"19"},{"size":1175,"mtime":1610921888520,"results":"26","hashOfConfig":"19"},{"size":221,"mtime":1610622453917,"results":"27","hashOfConfig":"19"},{"size":181,"mtime":1610622026629,"results":"28","hashOfConfig":"19"},{"size":2870,"mtime":1610921414182,"results":"29","hashOfConfig":"19"},{"size":702,"mtime":1610649850215,"results":"30","hashOfConfig":"19"},{"size":502,"mtime":1610644467541,"results":"31","hashOfConfig":"19"},{"size":232,"mtime":1610628426725,"results":"32","hashOfConfig":"19"},{"size":2453,"mtime":1610649420623,"results":"33","hashOfConfig":"19"},{"size":279,"mtime":1610921969885,"results":"34","hashOfConfig":"19"},{"size":276,"mtime":1610921786259,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"ywws1e",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mahdi/to-do-react/src/index.js",[],["73","74"],"/home/mahdi/to-do-react/src/App.js",[],"/home/mahdi/to-do-react/src/reportWebVitals.js",[],"/home/mahdi/to-do-react/src/store.js",[],"/home/mahdi/to-do-react/src/components/NavBar.js",[],"/home/mahdi/to-do-react/src/reducers/root.js",[],"/home/mahdi/to-do-react/src/reducers/user.js",[],"/home/mahdi/to-do-react/src/components/Login.js",[],"/home/mahdi/to-do-react/src/components/Input.js",[],"/home/mahdi/to-do-react/src/components/Buttoon.js",[],"/home/mahdi/to-do-react/src/components/Tasks.js",["75","76"],"import React, { useState } from \"react\";\nimport Button from \"./Buttoon\";\nimport Input from \"./Input\";\nimport { addTask, deleteTask } from \"../actions/task\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Badge from \"./Badge\";\nimport { v4 as uuid } from \"uuid\";\nimport { useHistory } from \"react-router-dom\";\nimport withAuth from \"../Hoc/withAuth\";\n\nconst Tasks = () => {\n  const [taskName, setTaskName] = useState(\"\");\n  const [taskDescription, setTaskDescription] = useState(\"\");\n  const [showAlert, setShowAlet] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const { push } = useHistory();\n\n  const { tasks } = useSelector((state) => state.tasks);\n\n  const dispatch = useDispatch();\n\n  const saveNewTask = () => {\n    if (!taskName) {\n      setShowAlet(true);\n    } else {\n      setShowAlet(false);\n      dispatch(\n        addTask({\n          name: taskName,\n          description: taskDescription,\n          isComplet: false,\n          id: uuid(),\n        })\n      );\n\n      setTaskName(\"\");\n      setTaskDescription(\"\");\n    }\n  };\n  console.log(tasks);\n  return (\n    <div className=\"  text-start\">\n      {showAlert && (\n        <div class=\"alert alert-danger\" role=\"alert\">\n          Name is required\n        </div>\n      )}\n\n      <h1>Liste des tâches</h1>\n\n      {tasks.map((el) => (\n        <div key={el.id} className=\"container card mb-2 p-2 \">\n          <div className=\"d-flex\">\n            <div className=\"font-weight-bold\">{el.name}:</div>\n            <div className=\"text-secondary ml-1\">{el.description}</div>\n            <div\n              className=\"text-primary btn-delete ml-2\"\n              onClick={() => dispatch(deleteTask(el.id))}\n            >\n              supprimer\n            </div>\n            <div\n              className=\"text-primary btn-delete ml-2\"\n              onClick={() => push(`/task/${el.id}`)}\n            >\n              Edit\n            </div>\n            <div className=\" ml-auto\">\n              <Badge isComplet={el.isComplet} />\n            </div>\n          </div>\n        </div>\n      ))}\n\n      <h2>Crées une nouvelle tâche</h2>\n      <div className=\"container\">\n        <div className=\"row \">\n          <div className=\"col-sm\">\n            <Input\n              value={taskName}\n              placeholder=\"Nom de tâche \"\n              onChange={(e) => setTaskName(e.target.value)}\n            />\n          </div>\n          <div className=\"col-sm\">\n            <Input\n              value={taskDescription}\n              placeholder=\"Description de la tâches en une linge\"\n              onChange={(e) => setTaskDescription(e.target.value)}\n            />\n          </div>\n          <div className=\"col-sm mt-4\">\n            <Button text=\"Ajouter une tâche\" onClick={saveNewTask} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withAuth(Tasks);\n","/home/mahdi/to-do-react/src/reducers/tasks.js",[],"/home/mahdi/to-do-react/src/actions/task.js",[],"/home/mahdi/to-do-react/src/components/Badge.js",[],"/home/mahdi/to-do-react/src/components/EditTask.js",["77","78","79"],"import React, { useEffect, useState } from \"react\";\nimport Input from \"./Input\";\nimport Button from \"./Buttoon\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { editTask } from \"../actions/task\";\nfunction EditTask() {\n  const [taskName, setTaskName] = useState(\"\");\n  const [taskDescription, setTaskDescription] = useState(\"\");\n  const [showAlert, setShowAlert] = useState(false);\n  const [taskComplte, setTaskComplet] = useState(false);\n  const { id } = useParams();\n  const { push } = useHistory();\n  const dispatch = useDispatch();\n  const saveNewTask = () => {\n    if (!taskName) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n\n      push(\"/task\");\n\n      dispatch(\n        editTask({\n          id,\n          name: taskName,\n          description: taskDescription,\n          isComplet: taskComplte,\n        })\n      );\n    }\n  };\n  const { tasks } = useSelector((state) => state.tasks);\n\n  useEffect(() => {\n    if (tasks) {\n      tasks.map((el) => {\n        if (el.id === id) {\n          setTaskName(el.name);\n          setTaskDescription(el.description);\n          setTaskComplet(el.isComplet);\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <div>\n      <h1>Modifier task </h1>\n      <div className=\"container\">\n        <div className=\"row \">\n          <div className=\"col-sm\">\n            <Input\n              value={taskName}\n              placeholder=\"Nom de tâche \"\n              onChange={(e) => setTaskName(e.target.value)}\n            />\n          </div>\n          <div className=\"col-sm\">\n            <Input\n              value={taskDescription}\n              placeholder=\"Description de la tâches en une linge\"\n              onChange={(e) => setTaskDescription(e.target.value)}\n            />\n          </div>\n          <div className=\"col-sm\">\n            <select\n              defaultValue={taskComplte}\n              className=\"mt-4\"\n              onClick={(e) => {\n                setTaskComplet(e.currentTarget.value === \"true\" ? true : false);\n              }}\n            >\n              <option value={true}> complete </option>\n              <option value={false}> non complete </option>\n            </select>\n          </div>\n          <div className=\"col-sm mt-4\">\n            <Button text=\"Modifier la  tâche\" onClick={saveNewTask} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default EditTask;\n","/home/mahdi/to-do-react/src/actions/auth.js",[],"/home/mahdi/to-do-react/src/Hoc/withAuth.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":15,"column":10,"nodeType":"86","messageId":"87","endLine":15,"endColumn":16},{"ruleId":"84","severity":1,"message":"88","line":15,"column":18,"nodeType":"86","messageId":"87","endLine":15,"endColumn":27},{"ruleId":"84","severity":1,"message":"89","line":10,"column":10,"nodeType":"86","messageId":"87","endLine":10,"endColumn":19},{"ruleId":"90","severity":1,"message":"91","line":37,"column":22,"nodeType":"92","messageId":"93","endLine":37,"endColumn":24},{"ruleId":"94","severity":1,"message":"95","line":45,"column":6,"nodeType":"96","endLine":45,"endColumn":8,"suggestions":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'isOpen' is assigned a value but never used.","Identifier","unusedVar","'setIsOpen' is assigned a value but never used.","'showAlert' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'tasks'. Either include them or remove the dependency array.","ArrayExpression",["100"],"no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},"Update the dependencies array to be: [id, tasks]",{"range":"103","text":"104"},[1228,1230],"[id, tasks]"]